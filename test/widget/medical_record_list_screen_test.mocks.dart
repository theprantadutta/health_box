// Mocks generated by Mockito 5.4.6 from annotations
// in health_box/test/widget/medical_record_list_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:health_box/data/database/app_database.dart' as _i4;
import 'package:health_box/features/medical_records/services/medical_records_service.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFilteredRecordsResult_0 extends _i1.SmartFake
    implements _i2.FilteredRecordsResult {
  _FakeFilteredRecordsResult_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMedicalRecordsStatistics_1 extends _i1.SmartFake
    implements _i2.MedicalRecordsStatistics {
  _FakeMedicalRecordsStatistics_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MedicalRecordsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMedicalRecordsService extends _i1.Mock
    implements _i2.MedicalRecordsService {
  MockMedicalRecordsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.MedicalRecord>> getAllRecords() =>
      (super.noSuchMethod(
            Invocation.method(#getAllRecords, []),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecordsByProfileId(
    String? profileId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordsByProfileId, [profileId]),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecordsByType(String? recordType) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordsByType, [recordType]),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<_i4.MedicalRecord?> getRecordById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordById, [id]),
            returnValue: _i3.Future<_i4.MedicalRecord?>.value(),
          )
          as _i3.Future<_i4.MedicalRecord?>);

  @override
  _i3.Future<String> createRecord(_i2.CreateMedicalRecordRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#createRecord, [request]),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#createRecord, [request]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<bool> updateRecord(
    String? id,
    _i2.UpdateMedicalRecordRequest? request,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateRecord, [id, request]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteRecord(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRecord, [id]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> searchRecords({
    String? searchTerm,
    String? profileId,
    String? recordType,
    DateTime? startDate,
    DateTime? endDate,
    List<String>? tags,
    int? limit,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#searchRecords, [], {
              #searchTerm: searchTerm,
              #profileId: profileId,
              #recordType: recordType,
              #startDate: startDate,
              #endDate: endDate,
              #tags: tags,
              #limit: limit,
            }),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecordsInDateRange(
    DateTime? startDate,
    DateTime? endDate, {
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getRecordsInDateRange,
              [startDate, endDate],
              {#profileId: profileId},
            ),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecentRecords({
    int? limit = 10,
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentRecords, [], {
              #limit: limit,
              #profileId: profileId,
            }),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecordsByMultipleTypes(
    List<String>? recordTypes, {
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getRecordsByMultipleTypes,
              [recordTypes],
              {#profileId: profileId},
            ),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<_i2.FilteredRecordsResult> getFilteredRecords(
    _i2.MedicalRecordFilter? filter,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getFilteredRecords, [filter]),
            returnValue: _i3.Future<_i2.FilteredRecordsResult>.value(
              _FakeFilteredRecordsResult_0(
                this,
                Invocation.method(#getFilteredRecords, [filter]),
              ),
            ),
          )
          as _i3.Future<_i2.FilteredRecordsResult>);

  @override
  _i3.Future<int> getRecordCount({String? profileId}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordCount, [], {#profileId: profileId}),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<Map<String, int>> getRecordCountsByType({String? profileId}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordCountsByType, [], {
              #profileId: profileId,
            }),
            returnValue: _i3.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i3.Future<Map<String, int>>);

  @override
  _i3.Future<_i2.MedicalRecordsStatistics> getRecordsStatistics({
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordsStatistics, [], {
              #profileId: profileId,
            }),
            returnValue: _i3.Future<_i2.MedicalRecordsStatistics>.value(
              _FakeMedicalRecordsStatistics_1(
                this,
                Invocation.method(#getRecordsStatistics, [], {
                  #profileId: profileId,
                }),
              ),
            ),
          )
          as _i3.Future<_i2.MedicalRecordsStatistics>);

  @override
  _i3.Future<bool> recordExists(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#recordExists, [id]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  List<String> getValidRecordTypes() =>
      (super.noSuchMethod(
            Invocation.method(#getValidRecordTypes, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  String getRecordTypeDisplayName(String? recordType) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordTypeDisplayName, [recordType]),
            returnValue: _i5.dummyValue<String>(
              this,
              Invocation.method(#getRecordTypeDisplayName, [recordType]),
            ),
          )
          as String);

  @override
  _i3.Stream<List<_i4.MedicalRecord>> watchRecordsByProfile(
    String? profileId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#watchRecordsByProfile, [profileId]),
            returnValue: _i3.Stream<List<_i4.MedicalRecord>>.empty(),
          )
          as _i3.Stream<List<_i4.MedicalRecord>>);

  @override
  _i3.Stream<List<_i4.MedicalRecord>> watchRecordsByType(String? recordType) =>
      (super.noSuchMethod(
            Invocation.method(#watchRecordsByType, [recordType]),
            returnValue: _i3.Stream<List<_i4.MedicalRecord>>.empty(),
          )
          as _i3.Stream<List<_i4.MedicalRecord>>);

  @override
  _i3.Stream<_i4.MedicalRecord?> watchRecord(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchRecord, [id]),
            returnValue: _i3.Stream<_i4.MedicalRecord?>.empty(),
          )
          as _i3.Stream<_i4.MedicalRecord?>);
}
