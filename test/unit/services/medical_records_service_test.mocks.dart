// Mocks generated by Mockito 5.4.6 from annotations
// in health_box/test/unit/services/medical_records_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:health_box/data/database/app_database.dart' as _i4;
import 'package:health_box/data/repositories/medical_record_dao.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [MedicalRecordDao].
///
/// See the documentation for Mockito's code generation for more information.
class MockMedicalRecordDao extends _i1.Mock implements _i2.MedicalRecordDao {
  MockMedicalRecordDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.MedicalRecord>> getAllRecords() =>
      (super.noSuchMethod(
            Invocation.method(#getAllRecords, []),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecordsByProfileId(
    String? profileId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordsByProfileId, [profileId]),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecordsByType(String? recordType) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordsByType, [recordType]),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecordsByProfileAndType(
    String? profileId,
    String? recordType,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordsByProfileAndType, [
              profileId,
              recordType,
            ]),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<_i4.MedicalRecord?> getRecordById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordById, [id]),
            returnValue: _i3.Future<_i4.MedicalRecord?>.value(),
          )
          as _i3.Future<_i4.MedicalRecord?>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> searchRecords(
    String? searchTerm, {
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #searchRecords,
              [searchTerm],
              {#profileId: profileId},
            ),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecordsInDateRange(
    DateTime? startDate,
    DateTime? endDate, {
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getRecordsInDateRange,
              [startDate, endDate],
              {#profileId: profileId},
            ),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<List<_i4.MedicalRecord>> getRecentRecords({
    int? limit = 10,
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentRecords, [], {
              #limit: limit,
              #profileId: profileId,
            }),
            returnValue: _i3.Future<List<_i4.MedicalRecord>>.value(
              <_i4.MedicalRecord>[],
            ),
          )
          as _i3.Future<List<_i4.MedicalRecord>>);

  @override
  _i3.Future<String> createRecord(_i4.MedicalRecordsCompanion? record) =>
      (super.noSuchMethod(
            Invocation.method(#createRecord, [record]),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#createRecord, [record]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<bool> updateRecord(
    String? id,
    _i4.MedicalRecordsCompanion? record,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateRecord, [id, record]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> deleteRecord(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#deleteRecord, [id]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<bool> permanentlyDeleteRecord(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#permanentlyDeleteRecord, [id]),
            returnValue: _i3.Future<bool>.value(false),
          )
          as _i3.Future<bool>);

  @override
  _i3.Future<int> getRecordCountByProfile(String? profileId) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordCountByProfile, [profileId]),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<int> getRecordCountByType(
    String? recordType, {
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #getRecordCountByType,
              [recordType],
              {#profileId: profileId},
            ),
            returnValue: _i3.Future<int>.value(0),
          )
          as _i3.Future<int>);

  @override
  _i3.Future<Map<String, int>> getRecordCountsByType({String? profileId}) =>
      (super.noSuchMethod(
            Invocation.method(#getRecordCountsByType, [], {
              #profileId: profileId,
            }),
            returnValue: _i3.Future<Map<String, int>>.value(<String, int>{}),
          )
          as _i3.Future<Map<String, int>>);

  @override
  _i3.Future<List<_i4.Prescription>> getAllPrescriptions({String? profileId}) =>
      (super.noSuchMethod(
            Invocation.method(#getAllPrescriptions, [], {
              #profileId: profileId,
            }),
            returnValue: _i3.Future<List<_i4.Prescription>>.value(
              <_i4.Prescription>[],
            ),
          )
          as _i3.Future<List<_i4.Prescription>>);

  @override
  _i3.Future<List<_i4.Prescription>> getActivePrescriptions({
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getActivePrescriptions, [], {
              #profileId: profileId,
            }),
            returnValue: _i3.Future<List<_i4.Prescription>>.value(
              <_i4.Prescription>[],
            ),
          )
          as _i3.Future<List<_i4.Prescription>>);

  @override
  _i3.Future<String> createPrescription(
    _i4.PrescriptionsCompanion? prescription,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#createPrescription, [prescription]),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#createPrescription, [prescription]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Future<List<_i4.Medication>> getAllMedications({String? profileId}) =>
      (super.noSuchMethod(
            Invocation.method(#getAllMedications, [], {#profileId: profileId}),
            returnValue: _i3.Future<List<_i4.Medication>>.value(
              <_i4.Medication>[],
            ),
          )
          as _i3.Future<List<_i4.Medication>>);

  @override
  _i3.Future<List<_i4.Medication>> getActiveMedications({String? profileId}) =>
      (super.noSuchMethod(
            Invocation.method(#getActiveMedications, [], {
              #profileId: profileId,
            }),
            returnValue: _i3.Future<List<_i4.Medication>>.value(
              <_i4.Medication>[],
            ),
          )
          as _i3.Future<List<_i4.Medication>>);

  @override
  _i3.Future<List<_i4.Medication>> getMedicationsWithReminders({
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getMedicationsWithReminders, [], {
              #profileId: profileId,
            }),
            returnValue: _i3.Future<List<_i4.Medication>>.value(
              <_i4.Medication>[],
            ),
          )
          as _i3.Future<List<_i4.Medication>>);

  @override
  _i3.Future<String> createMedication(_i4.MedicationsCompanion? medication) =>
      (super.noSuchMethod(
            Invocation.method(#createMedication, [medication]),
            returnValue: _i3.Future<String>.value(
              _i5.dummyValue<String>(
                this,
                Invocation.method(#createMedication, [medication]),
              ),
            ),
          )
          as _i3.Future<String>);

  @override
  _i3.Stream<List<_i4.MedicalRecord>> watchRecordsByProfile(
    String? profileId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#watchRecordsByProfile, [profileId]),
            returnValue: _i3.Stream<List<_i4.MedicalRecord>>.empty(),
          )
          as _i3.Stream<List<_i4.MedicalRecord>>);

  @override
  _i3.Stream<List<_i4.MedicalRecord>> watchRecordsByType(String? recordType) =>
      (super.noSuchMethod(
            Invocation.method(#watchRecordsByType, [recordType]),
            returnValue: _i3.Stream<List<_i4.MedicalRecord>>.empty(),
          )
          as _i3.Stream<List<_i4.MedicalRecord>>);

  @override
  _i3.Stream<_i4.MedicalRecord?> watchRecord(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#watchRecord, [id]),
            returnValue: _i3.Stream<_i4.MedicalRecord?>.empty(),
          )
          as _i3.Stream<_i4.MedicalRecord?>);

  @override
  _i3.Stream<List<_i4.Medication>> watchActiveMedications({
    String? profileId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#watchActiveMedications, [], {
              #profileId: profileId,
            }),
            returnValue: _i3.Stream<List<_i4.Medication>>.empty(),
          )
          as _i3.Stream<List<_i4.Medication>>);
}
